! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! 
! Map File with Human-Readable Information
! 
! Generated by KPP-2.2.4_gc symbolic chemistry Kinetics PreProcessor
!       (http://www.cs.vt.edu/~asandu/Software/KPP)
! KPP is distributed under GPL, the general public licence
!       (http://www.gnu.org/copyleft/gpl.html)
! (C) 1995-1997, V. Damian & A. Sandu, CGRER, Univ. Iowa
! (C) 1997-2005, A. Sandu, Michigan Tech, Virginia Tech
!     With important contributions from:
!        M. Damian, Villanova University, USA
!        R. Sander, Max-Planck Institute for Chemistry, Mainz, Germany
! 
! File                 : gckpp.map
! Time                 : Mon Feb 12 14:16:01 2018
! Working directory    : /work/home/ts551/data/all_model_simulations/iodine_runs/iGEOSChem_6.2/code.tagged/KPP/Standard
! Equation file        : gckpp.kpp
! Output root filename : gckpp
! 
! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



### Options -------------------------------------------

FUNCTION - AGGREGATE
JACOBIAN - SPARSE W/ ACCOUNT FOR LU DECOMPOSITION FILL-IN
DOUBLE   - ON
REORDER  - ON

### Parameters ----------------------------------------

! NSPEC - Number of chemical species
  INTEGER, PARAMETER :: NSPEC = 238 
! NVAR - Number of Variable species
  INTEGER, PARAMETER :: NVAR = 233 
! NVARACT - Number of Active species
  INTEGER, PARAMETER :: NVARACT = 205 
! NFIX - Number of Fixed species
  INTEGER, PARAMETER :: NFIX = 5 
! NREACT - Number of reactions
  INTEGER, PARAMETER :: NREACT = 722 
! NVARST - Starting of variables in conc. vect.
  INTEGER, PARAMETER :: NVARST = 1 
! NFIXST - Starting of fixed in conc. vect.
  INTEGER, PARAMETER :: NFIXST = 234 

### Species -------------------------------------------

Variable species
  1 = CH2I2 (r)  79 = CH2Cl2 (r)157 = MGLYOO (r)
  2 = CH2ICl (r) 80 = HCFC123 (r)158 = MVKN (r)  
  3 = CH2IBr (r) 81 = ETP (r)   159 = PRN1 (r)  
  4 = MONX (r)   82 = HCFC141b (r)160 = MONITU (r)
  5 = AERI (n)   83 = IONO (r)  161 = MGLOO (r) 
  6 = CO2 (n)    84 = ClNO2 (r) 162 = A3O2 (r)  
  7 = INDIOL (n) 85 = HCFC142b (r)163 = CH2OO (r) 
  8 = ISALA (n)  86 = HCFC22 (r)164 = PROPNN (r)
  9 = ISALC (n)  87 = OIO (r)   165 = MAN2 (r)  
 10 = ISN1OA (n) 88 = RA3P (r)  166 = ISNOOA (r)
 11 = ISN1OG (r) 89 = RB3P (r)  167 = PO2 (r)   
 12 = LBRO2H (n) 90 = XYLE (r)  168 = B3O2 (r)  
 13 = LBRO2N (n) 91 = DMS (r)   169 = ISOPNDO2 (r)
 14 = LISOPOH (n) 92 = CH3Cl (r) 170 = MACROO (r)
 15 = LISOPNO3 (n) 93 = CH3Br (r) 171 = R4N1 (r)  
 16 = LTRO2H (n) 94 = HNO4 (r)  172 = ISOP (r)  
 17 = LTRO2N (n) 95 = ClOO (r)  173 = H2O2 (r)  
 18 = LVOCOA (n) 96 = HNO2 (r)  174 = MACRN (r) 
 19 = LVOC (r)   97 = OClO (r)  175 = MAOPO2 (r)
 20 = LXRO2H (n) 98 = PAN (r)   176 = ATO2 (r)  
 21 = LXRO2N (n) 99 = RP (r)    177 = HCOOH (r) 
 22 = MSA (n)   100 = PP (r)    178 = I (r)     
 23 = PYAC (n)  101 = PRPN (r)  179 = RCO3 (r)  
 24 = SO4H1 (n) 102 = SO4 (r)   180 = OLND (r)  
 25 = SO4H2 (n) 103 = ALK4 (r)  181 = OLNN (r)  
 26 = SOAGX (n) 104 = PIP (r)   182 = LIMO2 (r) 
 27 = SOAIE (n) 105 = R4P (r)   183 = IO (r)    
 28 = SOAME (n) 106 = HPALD (r) 184 = KO2 (r)   
 29 = IMAE (r)  107 = BrCl (r)  185 = HOBr (r)  
 30 = SOAMG (n) 108 = N2O5 (r)  186 = ISOPNBO2 (r)
 31 = POx (n)   109 = C3H8 (r)  187 = PIO2 (r)  
 32 = LOx (n)   110 = DHPCARP (r)188 = HC5OO (r) 
 33 = PCO (n)   111 = Br2 (r)   189 = HNO3 (r)  
 34 = LCO (n)   112 = HC187 (r) 190 = ISOPND (r)
 35 = PSO4 (n)  113 = HOI (r)   191 = HOCl (r)  
 36 = I2O4 (r)  114 = IAP (r)   192 = NMAO3 (r) 
 37 = DHDN (r)  115 = VRP (r)   193 = ACTA (r)  
 38 = DHDC (r)  116 = HPC52O2 (r)194 = VRO2 (r)  
 39 = I2O2 (r)  117 = ATOOH (r) 195 = ISN1 (r)  
 40 = CH3CCl3 (r)118 = MOBA (r)  196 = GLYC (r)  
 41 = MONITA (r)119 = HONIT (r) 197 = ClNO3 (r) 
 42 = BENZ (r)  120 = DHMOB (r) 198 = MGLY (r)  
 43 = CH3I (r)  121 = RIPB (r)  199 = ACET (r)  
 44 = H1301 (r) 122 = ISNP (r)  200 = HC5 (r)   
 45 = H2402 (r) 123 = MP (r)    201 = RIO2 (r)  
 46 = I2O3 (r)  124 = BrSALA (r)202 = INO2 (r)  
 47 = PMNN (r)  125 = BrSALC (r)203 = R4O2 (r)  
 48 = PPN (r)   126 = MAOP (r)  204 = ETO2 (r)  
 49 = TOLU (r)  127 = MRP (r)   205 = R4N2 (r)  
 50 = BrNO2 (r) 128 = RIPA (r)  206 = HAC (r)   
 51 = CCl4 (r)  129 = RIPD (r)  207 = MRO2 (r)  
 52 = CFC11 (r) 130 = ETHLN (r) 208 = BrO (r)   
 53 = CFC12 (r) 131 = EOH (r)   209 = PRPE (r)  
 54 = CFC113 (r)132 = INPN (r)  210 = RCHO (r)  
 55 = CFC114 (r)133 = C2H6 (r)  211 = MEK (r)   
 56 = CFC115 (r)134 = MTPA (r)  212 = MACR (r)  
 57 = H1211 (r) 135 = NPMN (r)  213 = CH2O (r)  
 58 = IBr (r)   136 = IONO2 (r) 214 = ALD2 (r)  
 59 = IEPOXD (r)137 = MOBAOO (r)215 = MVK (r)   
 60 = INO (r)   138 = DIBOO (r) 216 = MCO3 (r)  
 61 = N2O (r)   139 = IPMN (r)  217 = SO2 (r)   
 62 = TRO2 (r)  140 = LIMO (r)  218 = MO2 (r)   
 63 = BRO2 (r)  141 = MACRNO2 (r)219 = CO (r)    
 64 = IEPOXA (r)142 = H (r)     220 = Br (r)    
 65 = IEPOXB (r)143 = BrNO3 (r) 221 = OH (r)    
 66 = IONITA (r)144 = ROH (r)   222 = NO3 (r)   
 67 = N (r)     145 = MONITS (r)223 = NO2 (r)   
 68 = OCS (r)   146 = I2 (r)    224 = HBr (r)   
 69 = XRO2 (r)  147 = Cl2 (r)   225 = O3 (r)    
 70 = HI (r)    148 = ISOPNB (r)226 = HCl (r)   
 71 = MAP (r)   149 = ISNOHOO (r)227 = O1D (r)   
 72 = CHBr3 (r) 150 = CH4 (r)   228 = HO2 (r)   
 73 = ICl (r)   151 = MVKOO (r) 229 = NO (r)    
 74 = Cl2O2 (r) 152 = ISNOOB (r)230 = Cl (r)    
 75 = IMAO3 (r) 153 = GAOO (r)  231 = H2O (r)   
 76 = CHCl3 (r) 154 = CH3CHOO (r)232 = ClO (r)   
 77 = MPN (r)   155 = IEPOXOO (r)233 = O (r)     
 78 = CH2Br2 (r)156 = GLYX (r)  

Fixed species
  1 = H2 (r)      3 = N2 (r)      5 = RCOOH (n) 
  2 = MOH (r)     4 = O2 (r)    

### Subroutines ---------------------------------------

SUBROUTINE Fun ( V, F, RCT, Vdot )
SUBROUTINE Jac_SP ( V, F, RCT, JVS )
SUBROUTINE Jac_SP_Vec ( JVS, UV, JUV )
SUBROUTINE JacTR_SP_Vec ( JVS, UV, JTUV )
SUBROUTINE KppSolve ( JVS, X )
SUBROUTINE KppSolveTR ( JVS, X, XX )
SUBROUTINE Initialize ( )
SUBROUTINE Shuffle_user2kpp ( V_USER, V )
SUBROUTINE Shuffle_kpp2user ( V, V_USER )
SUBROUTINE Update_RCONST ( )
SUBROUTINE Update_PHOTO ( )
SUBROUTINE GetMass ( CL, Mass )
SUBROUTINE ComputeFamilies ( V, FAM )
