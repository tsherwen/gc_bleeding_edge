! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! 
! Map File with Human-Readable Information
! 
! Generated by KPP-2.2.4_gc symbolic chemistry Kinetics PreProcessor
!       (http://www.cs.vt.edu/~asandu/Software/KPP)
! KPP is distributed under GPL, the general public licence
!       (http://www.gnu.org/copyleft/gpl.html)
! (C) 1995-1997, V. Damian & A. Sandu, CGRER, Univ. Iowa
! (C) 1997-2005, A. Sandu, Michigan Tech, Virginia Tech
!     With important contributions from:
!        M. Damian, Villanova University, USA
!        R. Sander, Max-Planck Institute for Chemistry, Mainz, Germany
! 
! File                 : gckpp.map
! Time                 : Fri Mar  9 14:53:10 2018
! Working directory    : /work/home/ts551/data/all_model_simulations/iodine_runs/iGEOSChem_6.3/code/KPP/Standard
! Equation file        : gckpp.kpp
! Output root filename : gckpp
! 
! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



### Options -------------------------------------------

FUNCTION - AGGREGATE
JACOBIAN - SPARSE W/ ACCOUNT FOR LU DECOMPOSITION FILL-IN
DOUBLE   - ON
REORDER  - ON

### Parameters ----------------------------------------

! NSPEC - Number of chemical species
  INTEGER, PARAMETER :: NSPEC = 238 
! NVAR - Number of Variable species
  INTEGER, PARAMETER :: NVAR = 233 
! NVARACT - Number of Active species
  INTEGER, PARAMETER :: NVARACT = 205 
! NFIX - Number of Fixed species
  INTEGER, PARAMETER :: NFIX = 5 
! NREACT - Number of reactions
  INTEGER, PARAMETER :: NREACT = 724 
! NVARST - Starting of variables in conc. vect.
  INTEGER, PARAMETER :: NVARST = 1 
! NFIXST - Starting of fixed in conc. vect.
  INTEGER, PARAMETER :: NFIXST = 234 

### Species -------------------------------------------

Variable species
  1 = CH2I2 (r)  79 = ClNO2 (r) 157 = GLYX (r)  
  2 = CH2ICl (r) 80 = ETP (r)   158 = MVKN (r)  
  3 = CH2IBr (r) 81 = IONO (r)  159 = PRN1 (r)  
  4 = AERI (n)   82 = HCFC123 (r)160 = MONITU (r)
  5 = CO2 (n)    83 = HCFC141b (r)161 = MGLOO (r) 
  6 = INDIOL (n) 84 = HCFC142b (r)162 = A3O2 (r)  
  7 = ISALA (n)  85 = OIO (r)   163 = CH2OO (r) 
  8 = ISALC (n)  86 = RA3P (r)  164 = PROPNN (r)
  9 = ISN1OA (n) 87 = RB3P (r)  165 = ISNOOA (r)
 10 = ISN1OG (r) 88 = XYLE (r)  166 = MAN2 (r)  
 11 = LBRO2H (n) 89 = HCFC22 (r)167 = PO2 (r)   
 12 = LBRO2N (n) 90 = DMS (r)   168 = ISOPNDO2 (r)
 13 = LISOPOH (n) 91 = CH3Cl (r) 169 = B3O2 (r)  
 14 = LISOPNO3 (n) 92 = CH3Br (r) 170 = MACROO (r)
 15 = LTRO2H (n) 93 = HNO4 (r)  171 = R4N1 (r)  
 16 = LTRO2N (n) 94 = ClOO (r)  172 = MACRN (r) 
 17 = LVOCOA (n) 95 = HNO2 (r)  173 = H2O2 (r)  
 18 = LVOC (r)   96 = OClO (r)  174 = ISOP (r)  
 19 = LXRO2H (n) 97 = PAN (r)   175 = MAOPO2 (r)
 20 = LXRO2N (n) 98 = RP (r)    176 = ATO2 (r)  
 21 = MSA (n)    99 = PP (r)    177 = HCOOH (r) 
 22 = PYAC (n)  100 = PRPN (r)  178 = I (r)     
 23 = SO4H1 (n) 101 = SO4 (r)   179 = RCO3 (r)  
 24 = SO4H2 (n) 102 = ALK4 (r)  180 = OLND (r)  
 25 = SOAGX (n) 103 = PIP (r)   181 = OLNN (r)  
 26 = SOAIE (n) 104 = R4P (r)   182 = LIMO2 (r) 
 27 = SOAME (n) 105 = HPALD (r) 183 = IO (r)    
 28 = IMAE (r)  106 = BrCl (r)  184 = KO2 (r)   
 29 = SOAMG (n) 107 = N2O5 (r)  185 = HOBr (r)  
 30 = POx (n)   108 = C3H8 (r)  186 = HC5OO (r) 
 31 = LOx (n)   109 = DHPCARP (r)187 = ISOPNBO2 (r)
 32 = PCO (n)   110 = IAP (r)   188 = PIO2 (r)  
 33 = LCO (n)   111 = HOI (r)   189 = HNO3 (r)  
 34 = PSO4 (n)  112 = HC187 (r) 190 = ISOPND (r)
 35 = I2O4 (r)  113 = VRP (r)   191 = GLYC (r)  
 36 = CH3CCl3 (r)114 = ATOOH (r) 192 = NMAO3 (r) 
 37 = DHDN (r)  115 = Br2 (r)   193 = ACTA (r)  
 38 = DHDC (r)  116 = HPC52O2 (r)194 = VRO2 (r)  
 39 = I2O2 (r)  117 = MOBA (r)  195 = HOCl (r)  
 40 = MONITA (r)118 = HONIT (r) 196 = ISN1 (r)  
 41 = BENZ (r)  119 = DHMOB (r) 197 = ClNO3 (r) 
 42 = CH3I (r)  120 = RIPB (r)  198 = MGLY (r)  
 43 = H1301 (r) 121 = BrSALC (r)199 = ACET (r)  
 44 = H2402 (r) 122 = MP (r)    200 = HC5 (r)   
 45 = I2O3 (r)  123 = ISNP (r)  201 = RIO2 (r)  
 46 = PMNN (r)  124 = BrSALA (r)202 = INO2 (r)  
 47 = PPN (r)   125 = MAOP (r)  203 = R4O2 (r)  
 48 = TOLU (r)  126 = MRP (r)   204 = ETO2 (r)  
 49 = BrNO2 (r) 127 = ETHLN (r) 205 = R4N2 (r)  
 50 = CCl4 (r)  128 = EOH (r)   206 = HAC (r)   
 51 = CFC11 (r) 129 = RIPA (r)  207 = MRO2 (r)  
 52 = CFC12 (r) 130 = RIPD (r)  208 = BrO (r)   
 53 = CFC113 (r)131 = ISNOHOO (r)209 = PRPE (r)  
 54 = CFC114 (r)132 = MTPA (r)  210 = RCHO (r)  
 55 = CFC115 (r)133 = MTPO (r)  211 = MEK (r)   
 56 = H1211 (r) 134 = NPMN (r)  212 = MACR (r)  
 57 = IBr (r)   135 = C2H6 (r)  213 = CH2O (r)  
 58 = IEPOXD (r)136 = IONO2 (r) 214 = ALD2 (r)  
 59 = INO (r)   137 = MOBAOO (r)215 = MVK (r)   
 60 = N2O (r)   138 = DIBOO (r) 216 = MCO3 (r)  
 61 = TRO2 (r)  139 = LIMO (r)  217 = SO2 (r)   
 62 = BRO2 (r)  140 = IPMN (r)  218 = HBr (r)   
 63 = IEPOXA (r)141 = ISNOOB (r)219 = HCl (r)   
 64 = IEPOXB (r)142 = INPN (r)  220 = O (r)     
 65 = IONITA (r)143 = H (r)     221 = MO2 (r)   
 66 = N (r)     144 = MACRNO2 (r)222 = Cl (r)    
 67 = OCS (r)   145 = BrNO3 (r) 223 = OH (r)    
 68 = XRO2 (r)  146 = ROH (r)   224 = O3 (r)    
 69 = HI (r)    147 = Cl2 (r)   225 = NO2 (r)   
 70 = MAP (r)   148 = MONITS (r)226 = NO (r)    
 71 = ICl (r)   149 = I2 (r)    227 = ClO (r)   
 72 = CH2Cl2 (r)150 = ISOPNB (r)228 = NO3 (r)   
 73 = IMAO3 (r) 151 = CH4 (r)   229 = H2O (r)   
 74 = CHBr3 (r) 152 = MVKOO (r) 230 = Br (r)    
 75 = MPN (r)   153 = GAOO (r)  231 = O1D (r)   
 76 = Cl2O2 (r) 154 = CH3CHOO (r)232 = CO (r)    
 77 = CHCl3 (r) 155 = MGLYOO (r)233 = HO2 (r)   
 78 = CH2Br2 (r)156 = IEPOXOO (r)

Fixed species
  1 = H2 (r)      3 = N2 (r)      5 = RCOOH (n) 
  2 = MOH (r)     4 = O2 (r)    

### Subroutines ---------------------------------------

SUBROUTINE Fun ( V, F, RCT, Vdot )
SUBROUTINE Jac_SP ( V, F, RCT, JVS )
SUBROUTINE Jac_SP_Vec ( JVS, UV, JUV )
SUBROUTINE JacTR_SP_Vec ( JVS, UV, JTUV )
SUBROUTINE KppSolve ( JVS, X )
SUBROUTINE KppSolveTR ( JVS, X, XX )
SUBROUTINE Initialize ( )
SUBROUTINE Shuffle_user2kpp ( V_USER, V )
SUBROUTINE Shuffle_kpp2user ( V, V_USER )
SUBROUTINE Update_RCONST ( )
SUBROUTINE Update_PHOTO ( )
SUBROUTINE GetMass ( CL, Mass )
SUBROUTINE ComputeFamilies ( V, FAM )
